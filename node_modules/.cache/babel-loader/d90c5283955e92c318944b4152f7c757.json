{"remainingRequest":"F:\\emanager\\node_modules\\babel-loader\\lib\\index.js!F:\\emanager\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\emanager\\src\\store\\modules\\tagsView.js","dependencies":[{"path":"F:\\emanager\\src\\store\\modules\\tagsView.js","mtime":1604888126750},{"path":"F:\\emanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\emanager\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\emanager\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIkY6L2VtYW5hZ2VyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tICJGOi9lbWFuYWdlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICJGOi9lbWFuYWdlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CnZhciB0YWdzVmlldyA9IHsKICBzdGF0ZTogewogICAgdmlzaXRlZFZpZXdzOiBbXSwKICAgIGNhY2hlZFZpZXdzOiBbXQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBBRERfVklTSVRFRF9WSUVXUzogZnVuY3Rpb24gQUREX1ZJU0lURURfVklFV1Moc3RhdGUsIHZpZXcpIHsKICAgICAgaWYgKHN0YXRlLnZpc2l0ZWRWaWV3cy5zb21lKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuIHYucGF0aCA9PT0gdmlldy5mdWxsUGF0aDsKICAgICAgfSkpIHJldHVybjsKICAgICAgc3RhdGUudmlzaXRlZFZpZXdzLnB1c2goewogICAgICAgIG5hbWU6IHZpZXcubmFtZSwKICAgICAgICBwYXRoOiB2aWV3LmZ1bGxQYXRoLAogICAgICAgIHRpdGxlOiB2aWV3Lm1ldGEudGl0bGUgfHwgJ25vLW5hbWUnCiAgICAgIH0pOwoKICAgICAgaWYgKCF2aWV3Lm1ldGEubm9DYWNoZSkgewogICAgICAgIHN0YXRlLmNhY2hlZFZpZXdzLnB1c2godmlldy5uYW1lKTsKICAgICAgfQogICAgfSwKICAgIERFTF9WSVNJVEVEX1ZJRVdTOiBmdW5jdGlvbiBERUxfVklTSVRFRF9WSUVXUyhzdGF0ZSwgdmlldykgewogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoc3RhdGUudmlzaXRlZFZpZXdzLmVudHJpZXMoKSksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBfc3RlcCR2YWx1ZSA9IF9zbGljZWRUb0FycmF5KF9zdGVwLnZhbHVlLCAyKSwKICAgICAgICAgICAgICBpID0gX3N0ZXAkdmFsdWVbMF0sCiAgICAgICAgICAgICAgdiA9IF9zdGVwJHZhbHVlWzFdOwoKICAgICAgICAgIGlmICh2LnBhdGggPT09IHZpZXcucGF0aCkgewogICAgICAgICAgICBzdGF0ZS52aXNpdGVkVmlld3Muc3BsaWNlKGksIDEpOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQoKICAgICAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihzdGF0ZS5jYWNoZWRWaWV3cyksCiAgICAgICAgICBfc3RlcDI7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgX2kgPSBfc3RlcDIudmFsdWU7CgogICAgICAgICAgaWYgKF9pID09PSB2aWV3Lm5hbWUpIHsKICAgICAgICAgICAgdmFyIGluZGV4ID0gc3RhdGUuY2FjaGVkVmlld3MuaW5kZXhPZihfaSk7CiAgICAgICAgICAgIHN0YXRlLmNhY2hlZFZpZXdzLnNwbGljZShpbmRleCwgMSk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMi5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMi5mKCk7CiAgICAgIH0KICAgIH0sCiAgICBERUxfT1RIRVJTX1ZJRVdTOiBmdW5jdGlvbiBERUxfT1RIRVJTX1ZJRVdTKHN0YXRlLCB2aWV3KSB7CiAgICAgIHZhciBfaXRlcmF0b3IzID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoc3RhdGUudmlzaXRlZFZpZXdzLmVudHJpZXMoKSksCiAgICAgICAgICBfc3RlcDM7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yMy5zKCk7ICEoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgX3N0ZXAzJHZhbHVlID0gX3NsaWNlZFRvQXJyYXkoX3N0ZXAzLnZhbHVlLCAyKSwKICAgICAgICAgICAgICBpID0gX3N0ZXAzJHZhbHVlWzBdLAogICAgICAgICAgICAgIHYgPSBfc3RlcDMkdmFsdWVbMV07CgogICAgICAgICAgaWYgKHYucGF0aCA9PT0gdmlldy5wYXRoKSB7CiAgICAgICAgICAgIHN0YXRlLnZpc2l0ZWRWaWV3cyA9IHN0YXRlLnZpc2l0ZWRWaWV3cy5zbGljZShpLCBpICsgMSk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMy5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMy5mKCk7CiAgICAgIH0KCiAgICAgIHZhciBfaXRlcmF0b3I0ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoc3RhdGUuY2FjaGVkVmlld3MpLAogICAgICAgICAgX3N0ZXA0OwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjQucygpOyAhKF9zdGVwNCA9IF9pdGVyYXRvcjQubigpKS5kb25lOykgewogICAgICAgICAgdmFyIF9pMiA9IF9zdGVwNC52YWx1ZTsKCiAgICAgICAgICBpZiAoX2kyID09PSB2aWV3Lm5hbWUpIHsKICAgICAgICAgICAgdmFyIGluZGV4ID0gc3RhdGUuY2FjaGVkVmlld3MuaW5kZXhPZihfaTIpOwogICAgICAgICAgICBzdGF0ZS5jYWNoZWRWaWV3cyA9IHN0YXRlLmNhY2hlZFZpZXdzLnNsaWNlKGluZGV4LCBfaTIgKyAxKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3I0LmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3I0LmYoKTsKICAgICAgfQogICAgfSwKICAgIERFTF9BTExfVklFV1M6IGZ1bmN0aW9uIERFTF9BTExfVklFV1Moc3RhdGUpIHsKICAgICAgc3RhdGUudmlzaXRlZFZpZXdzID0gW107CiAgICAgIHN0YXRlLmNhY2hlZFZpZXdzID0gW107CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBhZGRWaXNpdGVkVmlld3M6IGZ1bmN0aW9uIGFkZFZpc2l0ZWRWaWV3cyhfcmVmLCB2aWV3KSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgY29tbWl0KCdBRERfVklTSVRFRF9WSUVXUycsIHZpZXcpOwogICAgfSwKICAgIGRlbFZpc2l0ZWRWaWV3czogZnVuY3Rpb24gZGVsVmlzaXRlZFZpZXdzKF9yZWYyLCB2aWV3KSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQsCiAgICAgICAgICBzdGF0ZSA9IF9yZWYyLnN0YXRlOwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICBjb21taXQoJ0RFTF9WSVNJVEVEX1ZJRVdTJywgdmlldyk7CiAgICAgICAgcmVzb2x2ZShfdG9Db25zdW1hYmxlQXJyYXkoc3RhdGUudmlzaXRlZFZpZXdzKSk7CiAgICAgIH0pOwogICAgfSwKICAgIGRlbE90aGVyc1ZpZXdzOiBmdW5jdGlvbiBkZWxPdGhlcnNWaWV3cyhfcmVmMywgdmlldykgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0LAogICAgICAgICAgc3RhdGUgPSBfcmVmMy5zdGF0ZTsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgY29tbWl0KCdERUxfT1RIRVJTX1ZJRVdTJywgdmlldyk7CiAgICAgICAgcmVzb2x2ZShfdG9Db25zdW1hYmxlQXJyYXkoc3RhdGUudmlzaXRlZFZpZXdzKSk7CiAgICAgIH0pOwogICAgfSwKICAgIGRlbEFsbFZpZXdzOiBmdW5jdGlvbiBkZWxBbGxWaWV3cyhfcmVmNCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0LAogICAgICAgICAgc3RhdGUgPSBfcmVmNC5zdGF0ZTsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgY29tbWl0KCdERUxfQUxMX1ZJRVdTJyk7CiAgICAgICAgcmVzb2x2ZShfdG9Db25zdW1hYmxlQXJyYXkoc3RhdGUudmlzaXRlZFZpZXdzKSk7CiAgICAgIH0pOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgdGFnc1ZpZXc7"},{"version":3,"sources":["F:/emanager/src/store/modules/tagsView.js"],"names":["tagsView","state","visitedViews","cachedViews","mutations","ADD_VISITED_VIEWS","view","some","v","path","fullPath","push","name","title","meta","noCache","DEL_VISITED_VIEWS","entries","i","splice","index","indexOf","DEL_OTHERS_VIEWS","slice","DEL_ALL_VIEWS","actions","addVisitedViews","commit","delVisitedViews","Promise","resolve","delOthersViews","delAllViews"],"mappings":";;;;;;;;;;AAAA,IAAMA,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE,EADT;AAELC,IAAAA,WAAW,EAAE;AAFR,GADQ;AAKfC,EAAAA,SAAS,EAAE;AACTC,IAAAA,iBAAiB,EAAE,2BAACJ,KAAD,EAAQK,IAAR,EAAiB;AAClC,UAAIL,KAAK,CAACC,YAAN,CAAmBK,IAAnB,CAAwB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,KAAWH,IAAI,CAACI,QAApB;AAAA,OAAzB,CAAJ,EAA4D;AAC5DT,MAAAA,KAAK,CAACC,YAAN,CAAmBS,IAAnB,CAAwB;AACtBC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IADW;AAEtBH,QAAAA,IAAI,EAAEH,IAAI,CAACI,QAFW;AAGtBG,QAAAA,KAAK,EAAEP,IAAI,CAACQ,IAAL,CAAUD,KAAV,IAAmB;AAHJ,OAAxB;;AAKA,UAAI,CAACP,IAAI,CAACQ,IAAL,CAAUC,OAAf,EAAwB;AACtBd,QAAAA,KAAK,CAACE,WAAN,CAAkBQ,IAAlB,CAAuBL,IAAI,CAACM,IAA5B;AACD;AACF,KAXQ;AAYTI,IAAAA,iBAAiB,EAAE,2BAACf,KAAD,EAAQK,IAAR,EAAiB;AAAA,iDACbL,KAAK,CAACC,YAAN,CAAmBe,OAAnB,EADa;AAAA;;AAAA;AAClC,4DAAmD;AAAA;AAAA,cAAvCC,CAAuC;AAAA,cAApCV,CAAoC;;AACjD,cAAIA,CAAC,CAACC,IAAF,KAAWH,IAAI,CAACG,IAApB,EAA0B;AACxBR,YAAAA,KAAK,CAACC,YAAN,CAAmBiB,MAAnB,CAA0BD,CAA1B,EAA6B,CAA7B;AACA;AACD;AACF;AANiC;AAAA;AAAA;AAAA;AAAA;;AAAA,kDAOlBjB,KAAK,CAACE,WAPY;AAAA;;AAAA;AAOlC,+DAAmC;AAAA,cAAxBe,EAAwB;;AACjC,cAAIA,EAAC,KAAKZ,IAAI,CAACM,IAAf,EAAqB;AACnB,gBAAMQ,KAAK,GAAGnB,KAAK,CAACE,WAAN,CAAkBkB,OAAlB,CAA0BH,EAA1B,CAAd;AACAjB,YAAAA,KAAK,CAACE,WAAN,CAAkBgB,MAAlB,CAAyBC,KAAzB,EAAgC,CAAhC;AACA;AACD;AACF;AAbiC;AAAA;AAAA;AAAA;AAAA;AAcnC,KA1BQ;AA2BTE,IAAAA,gBAAgB,EAAE,0BAACrB,KAAD,EAAQK,IAAR,EAAiB;AAAA,kDACZL,KAAK,CAACC,YAAN,CAAmBe,OAAnB,EADY;AAAA;;AAAA;AACjC,+DAAmD;AAAA;AAAA,cAAvCC,CAAuC;AAAA,cAApCV,CAAoC;;AACjD,cAAIA,CAAC,CAACC,IAAF,KAAWH,IAAI,CAACG,IAApB,EAA0B;AACxBR,YAAAA,KAAK,CAACC,YAAN,GAAqBD,KAAK,CAACC,YAAN,CAAmBqB,KAAnB,CAAyBL,CAAzB,EAA4BA,CAAC,GAAG,CAAhC,CAArB;AACA;AACD;AACF;AANgC;AAAA;AAAA;AAAA;AAAA;;AAAA,kDAOjBjB,KAAK,CAACE,WAPW;AAAA;;AAAA;AAOjC,+DAAmC;AAAA,cAAxBe,GAAwB;;AACjC,cAAIA,GAAC,KAAKZ,IAAI,CAACM,IAAf,EAAqB;AACnB,gBAAMQ,KAAK,GAAGnB,KAAK,CAACE,WAAN,CAAkBkB,OAAlB,CAA0BH,GAA1B,CAAd;AACAjB,YAAAA,KAAK,CAACE,WAAN,GAAoBF,KAAK,CAACE,WAAN,CAAkBoB,KAAlB,CAAwBH,KAAxB,EAA+BF,GAAC,GAAG,CAAnC,CAApB;AACA;AACD;AACF;AAbgC;AAAA;AAAA;AAAA;AAAA;AAclC,KAzCQ;AA0CTM,IAAAA,aAAa,EAAE,uBAACvB,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAACC,YAAN,GAAqB,EAArB;AACAD,MAAAA,KAAK,CAACE,WAAN,GAAoB,EAApB;AACD;AA7CQ,GALI;AAoDfsB,EAAAA,OAAO,EAAE;AACPC,IAAAA,eADO,iCACsBpB,IADtB,EAC4B;AAAA,UAAhBqB,MAAgB,QAAhBA,MAAgB;AACjCA,MAAAA,MAAM,CAAC,mBAAD,EAAsBrB,IAAtB,CAAN;AACD,KAHM;AAIPsB,IAAAA,eAJO,kCAI6BtB,IAJ7B,EAImC;AAAA,UAAvBqB,MAAuB,SAAvBA,MAAuB;AAAA,UAAf1B,KAAe,SAAfA,KAAe;AACxC,aAAO,IAAI4B,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BH,QAAAA,MAAM,CAAC,mBAAD,EAAsBrB,IAAtB,CAAN;AACAwB,QAAAA,OAAO,oBAAK7B,KAAK,CAACC,YAAX,EAAP;AACD,OAHM,CAAP;AAID,KATM;AAUP6B,IAAAA,cAVO,iCAU4BzB,IAV5B,EAUkC;AAAA,UAAvBqB,MAAuB,SAAvBA,MAAuB;AAAA,UAAf1B,KAAe,SAAfA,KAAe;AACvC,aAAO,IAAI4B,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BH,QAAAA,MAAM,CAAC,kBAAD,EAAqBrB,IAArB,CAAN;AACAwB,QAAAA,OAAO,oBAAK7B,KAAK,CAACC,YAAX,EAAP;AACD,OAHM,CAAP;AAID,KAfM;AAgBP8B,IAAAA,WAhBO,8BAgByB;AAAA,UAAjBL,MAAiB,SAAjBA,MAAiB;AAAA,UAAT1B,KAAS,SAATA,KAAS;AAC9B,aAAO,IAAI4B,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BH,QAAAA,MAAM,CAAC,eAAD,CAAN;AACAG,QAAAA,OAAO,oBAAK7B,KAAK,CAACC,YAAX,EAAP;AACD,OAHM,CAAP;AAID;AArBM;AApDM,CAAjB;AA6EA,eAAeF,QAAf","sourcesContent":["const tagsView = {\r\n  state: {\r\n    visitedViews: [],\r\n    cachedViews: []\r\n  },\r\n  mutations: {\r\n    ADD_VISITED_VIEWS: (state, view) => {\r\n      if (state.visitedViews.some(v => v.path === view.fullPath)) return\r\n      state.visitedViews.push({\r\n        name: view.name,\r\n        path: view.fullPath,\r\n        title: view.meta.title || 'no-name'\r\n      })\r\n      if (!view.meta.noCache) {\r\n        state.cachedViews.push(view.name)\r\n      }\r\n    },\r\n    DEL_VISITED_VIEWS: (state, view) => {\r\n      for (const [i, v] of state.visitedViews.entries()) {\r\n        if (v.path === view.path) {\r\n          state.visitedViews.splice(i, 1)\r\n          break\r\n        }\r\n      }\r\n      for (const i of state.cachedViews) {\r\n        if (i === view.name) {\r\n          const index = state.cachedViews.indexOf(i)\r\n          state.cachedViews.splice(index, 1)\r\n          break\r\n        }\r\n      }\r\n    },\r\n    DEL_OTHERS_VIEWS: (state, view) => {\r\n      for (const [i, v] of state.visitedViews.entries()) {\r\n        if (v.path === view.path) {\r\n          state.visitedViews = state.visitedViews.slice(i, i + 1)\r\n          break\r\n        }\r\n      }\r\n      for (const i of state.cachedViews) {\r\n        if (i === view.name) {\r\n          const index = state.cachedViews.indexOf(i)\r\n          state.cachedViews = state.cachedViews.slice(index, i + 1)\r\n          break\r\n        }\r\n      }\r\n    },\r\n    DEL_ALL_VIEWS: (state) => {\r\n      state.visitedViews = []\r\n      state.cachedViews = []\r\n    }\r\n  },\r\n  actions: {\r\n    addVisitedViews ({ commit }, view) {\r\n      commit('ADD_VISITED_VIEWS', view)\r\n    },\r\n    delVisitedViews ({ commit, state }, view) {\r\n      return new Promise((resolve) => {\r\n        commit('DEL_VISITED_VIEWS', view)\r\n        resolve([...state.visitedViews])\r\n      })\r\n    },\r\n    delOthersViews ({ commit, state }, view) {\r\n      return new Promise((resolve) => {\r\n        commit('DEL_OTHERS_VIEWS', view)\r\n        resolve([...state.visitedViews])\r\n      })\r\n    },\r\n    delAllViews ({ commit, state }) {\r\n      return new Promise((resolve) => {\r\n        commit('DEL_ALL_VIEWS')\r\n        resolve([...state.visitedViews])\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default tagsView\r\n"]}]}