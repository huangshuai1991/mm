{"remainingRequest":"F:\\emanager\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\emanager\\src\\components\\Tags\\ScrollPane.vue?vue&type=style&index=0&id=3e182c2b&lang=less&scoped=true&","dependencies":[{"path":"F:\\emanager\\src\\components\\Tags\\ScrollPane.vue","mtime":1604888126489},{"path":"F:\\emanager\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\emanager\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\emanager\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\emanager\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\emanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\emanager\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouc2Nyb2xsLWNvbnRhaW5lciB7DQogIHdoaXRlLXNwYWNlOiBub3dyYXA7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgd2lkdGg6IDEwMCU7DQogIC5zY3JvbGwtd3JhcHBlciB7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICB9DQp9DQo="},{"version":3,"sources":["ScrollPane.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScrollPane.vue","sourceRoot":"src/components/Tags","sourcesContent":["<template>\r\n  <div class=\"scroll-container\"\r\n       ref=\"scrollContainer\"\r\n       @wheel.prevent=\"handleScroll\">\r\n    <div class=\"scroll-wrapper\"\r\n         ref=\"scrollWrapper\"\r\n         :style=\"{left: left + 'px'}\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst padding = 15; // tag's padding\r\n\r\nexport default {\r\n  name: \"scrollPane\",\r\n  data() {\r\n    return {\r\n      left: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    handleScroll(e) {\r\n      const eventDelta = e.wheelDelta || -e.deltaY * 3;\r\n      const $container = this.$refs.scrollContainer;\r\n      const $containerWidth = $container.offsetWidth;\r\n      const $wrapper = this.$refs.scrollWrapper;\r\n      const $wrapperWidth = $wrapper.offsetWidth;\r\n\r\n      if (eventDelta > 0) {\r\n        this.left = Math.min(0, this.left + eventDelta);\r\n      } else {\r\n        if ($containerWidth - padding < $wrapperWidth) {\r\n          if (this.left >= -($wrapperWidth - $containerWidth + padding)) {\r\n            this.left = Math.max(\r\n              this.left + eventDelta,\r\n              $containerWidth - $wrapperWidth - padding\r\n            );\r\n          }\r\n        } else {\r\n          this.left = 0;\r\n        }\r\n      }\r\n    },\r\n    moveToTarget($target) {\r\n      const $container = this.$refs.scrollContainer;\r\n      const $containerWidth = $container.offsetWidth;\r\n      const $targetLeft = $target.offsetLeft;\r\n      const $targetWidth = $target.offsetWidth;\r\n\r\n      if ($targetLeft < -this.left) {\r\n        // tag in the left\r\n        this.left = -$targetLeft + padding;\r\n      } else if (\r\n        $targetLeft + padding > -this.left &&\r\n        $targetLeft + $targetWidth < -this.left + $containerWidth - padding\r\n      ) {\r\n        // tag in the current view\r\n        // eslint-disable-line\r\n      } else {\r\n        // tag in the right\r\n        this.left = -($targetLeft - ($containerWidth - $targetWidth) + padding);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.scroll-container {\r\n  white-space: nowrap;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  .scroll-wrapper {\r\n    position: absolute;\r\n  }\r\n}\r\n</style>\r\n"]}]}